/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RandomNumberGenerator,
  RandomNumberGeneratorInterface,
} from "../RandomNumberGenerator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_linkToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRandomNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "keyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestLotteryId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRequestId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "peakFinanceLottery",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomResult",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
    ],
    name: "setKeyHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_peakFinanceLottery",
        type: "address",
      },
    ],
    name: "setLotteryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "viewLatestLotteryId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "viewRandomResult",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610f1d380380610f1d83398101604081905261002f916100cd565b6001600160601b0319606083811b821660a05282901b166080526100586100533390565b61005f565b50506100ff565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146100c857600080fd5b919050565b600080604083850312156100df578182fd5b6100e8836100b1565b91506100f6602084016100b1565b90509250929050565b60805160601c60a05160601c610de56101386000396000818161034901526108000152600081816104b001526107d10152610de56000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638da5cb5b116100a2578063dbdff2c111610071578063dbdff2c11461020d578063ddca3f4314610215578063eed8e1ee1461021e578063f2fde38b14610227578063fbe5d9171461023a57600080fd5b80638da5cb5b146101c857806394985ddd146101d957806398544710146101ec578063a1c4f55a146101ff57600080fd5b806342619f66116100de57806342619f661461017f57806361728f39146101a457806369fe0e2d146101ad578063715018a6146101c057600080fd5b806306b091f914610110578063121f5edb146101255780631aa46f59146101555780632a332b2a1461016c575b600080fd5b61012361011e366004610be1565b610242565b005b600254610138906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61015e60045481565b60405190815260200161014c565b61012361017a366004610bc7565b61028d565b60055461018f9063ffffffff1681565b60405163ffffffff909116815260200161014c565b61015e60035481565b6101236101bb366004610c2a565b6102d9565b610123610308565b6001546001600160a01b0316610138565b6101236101e7366004610c42565b61033e565b6101236101fa366004610c2a565b6103c0565b60055463ffffffff1661018f565b6101236103ef565b61015e60065481565b61015e60075481565b610123610235366004610bc7565b61058c565b60075461015e565b6001546001600160a01b031633146102755760405162461bcd60e51b815260040161026c90610d06565b60405180910390fd5b6102896001600160a01b0383163383610627565b5050565b6001546001600160a01b031633146102b75760405162461bcd60e51b815260040161026c90610d06565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146103035760405162461bcd60e51b815260040161026c90610d06565b600655565b6001546001600160a01b031633146103325760405162461bcd60e51b815260040161026c90610d06565b61033c600061067e565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103b65760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015260640161026c565b61028982826106d0565b6001546001600160a01b031633146103ea5760405162461bcd60e51b815260040161026c90610d06565b600355565b6002546001600160a01b031633146104495760405162461bcd60e51b815260206004820152601760248201527f4f6e6c79205065616b46696e616e63654c6f7474657279000000000000000000604482015260640161026c565b6003546104985760405162461bcd60e51b815260206004820152601860248201527f4d75737420686176652076616c6964206b657920686173680000000000000000604482015260640161026c565b6006546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b1580156104fa57600080fd5b505afa15801561050e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105329190610c63565b10156105795760405162461bcd60e51b81526020600482015260166024820152754e6f7420656e6f756768204c494e4b20746f6b656e7360501b604482015260640161026c565b6105876003546006546107cd565b600455565b6001546001600160a01b031633146105b65760405162461bcd60e51b815260040161026c90610d06565b6001600160a01b03811661061b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161026c565b6106248161067e565b50565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610679908490610956565b505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b81600454146107135760405162461bcd60e51b815260206004820152600f60248201526e15dc9bdb99c81c995c5d595cdd1259608a1b604482015260640161026c565b610720620f424082610d8f565b61072d90620f4240610d3b565b6005805463ffffffff191663ffffffff9290921691909117905560025460408051630405030b60e51b815290516001600160a01b03909216916380a06160916004808201926020929091908290030181600087803b15801561078e57600080fd5b505af11580156107a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c69190610c63565b6007555050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f00000000000000000000000000000000000000000000000000000000000000008486600060405160200161083d929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161086a93929190610cc3565b602060405180830381600087803b15801561088457600080fd5b505af1158015610898573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bc9190610c0a565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a090910190925281519183019190912086845292909152610916906001610d3b565b6000858152602081815260409182902092909255805180830187905280820184905281518082038301815260609091019091528051910120949350505050565b60006109ab826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a289092919063ffffffff16565b80519091501561067957808060200190518101906109c99190610c0a565b6106795760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161026c565b6060610a378484600085610a41565b90505b9392505050565b606082471015610aa25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161026c565b6001600160a01b0385163b610af95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161026c565b600080866001600160a01b03168587604051610b159190610ca7565b60006040518083038185875af1925050503d8060008114610b52576040519150601f19603f3d011682016040523d82523d6000602084013e610b57565b606091505b5091509150610b67828286610b72565b979650505050505050565b60608315610b81575081610a3a565b825115610b915782518084602001fd5b8160405162461bcd60e51b815260040161026c9190610cf3565b80356001600160a01b0381168114610bc257600080fd5b919050565b600060208284031215610bd8578081fd5b610a3a82610bab565b60008060408385031215610bf3578081fd5b610bfc83610bab565b946020939093013593505050565b600060208284031215610c1b578081fd5b81518015158114610a3a578182fd5b600060208284031215610c3b578081fd5b5035919050565b60008060408385031215610c54578182fd5b50508035926020909101359150565b600060208284031215610c74578081fd5b5051919050565b60008151808452610c93816020860160208601610d5f565b601f01601f19169290920160200192915050565b60008251610cb9818460208701610d5f565b9190910192915050565b60018060a01b0384168152826020820152606060408201526000610cea6060830184610c7b565b95945050505050565b602081526000610a3a6020830184610c7b565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610d5a57634e487b7160e01b81526011600452602481fd5b500190565b60005b83811015610d7a578181015183820152602001610d62565b83811115610d89576000848401525b50505050565b600082610daa57634e487b7160e01b81526012600452602481fd5b50069056fea2646970667358221220edef73f549ddaac5856edfa6ec07d1be2a40638ce5c344f54b04bf36521f2d0964736f6c63430008040033";

export class RandomNumberGenerator__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _vrfCoordinator: string,
    _linkToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RandomNumberGenerator> {
    return super.deploy(
      _vrfCoordinator,
      _linkToken,
      overrides || {}
    ) as Promise<RandomNumberGenerator>;
  }
  getDeployTransaction(
    _vrfCoordinator: string,
    _linkToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vrfCoordinator,
      _linkToken,
      overrides || {}
    );
  }
  attach(address: string): RandomNumberGenerator {
    return super.attach(address) as RandomNumberGenerator;
  }
  connect(signer: Signer): RandomNumberGenerator__factory {
    return super.connect(signer) as RandomNumberGenerator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomNumberGeneratorInterface {
    return new utils.Interface(_abi) as RandomNumberGeneratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RandomNumberGenerator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RandomNumberGenerator;
  }
}
